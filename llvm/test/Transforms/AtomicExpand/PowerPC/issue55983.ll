; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -opaque-pointers -atomic-expand -S -mtriple=powerpc64le-unknown-unknown \
; RUN:   %s | FileCheck %s
; RUN: opt -opaque-pointers -atomic-expand -S -mtriple=powerpc64-unknown-unknown \
; RUN:   %s | FileCheck %s

define void @foo() #0 {
; CHECK-LABEL: @foo(
; CHECK-NEXT:  bb0:
; CHECK-NEXT:    br i1 undef, label [[BB1:%.*]], label [[BB2:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[TMP0:%.*]] = load atomic ptr, ptr undef monotonic, align 8
; CHECK-NEXT:    call void @llvm.ppc.cfence.p0(ptr [[TMP0]])
; CHECK-NEXT:    unreachable
; CHECK:       bb2:
; CHECK-NEXT:    unreachable
;
bb0:
  br i1 undef, label %bb1, label %bb2

bb1:
  %0 = load atomic {}*, {}** undef acquire, align 8
  unreachable

bb2:
  unreachable
}

define void @bar() #0 {
; CHECK-LABEL: @bar(
; CHECK-NEXT:  bb0:
; CHECK-NEXT:    br i1 undef, label [[BB1:%.*]], label [[BB2:%.*]]
; CHECK:       bb1:
; CHECK-NEXT:    [[TMP0:%.*]] = load atomic ptr, ptr undef monotonic, align 8
; CHECK-NEXT:    call void @llvm.ppc.cfence.p0(ptr [[TMP0]])
; CHECK-NEXT:    unreachable
; CHECK:       bb2:
; CHECK-NEXT:    unreachable
;
bb0:
  br i1 undef, label %bb1, label %bb2

bb1:
  %0 = load atomic ptr, ptr undef acquire, align 8
  unreachable

bb2:
  unreachable
}

define void @foobar() {
; CHECK-LABEL: @foobar(
; CHECK-NEXT:  top:
; CHECK-NEXT:    br i1 undef, label [[ERR86:%.*]], label [[PASS9:%.*]]
; CHECK:       pass9:
; CHECK-NEXT:    [[TMP0:%.*]] = load atomic ptr addrspace(10), ptr addrspace(11) undef monotonic, align 8
; CHECK-NEXT:    call void @llvm.ppc.cfence.p10(ptr addrspace(10) [[TMP0]])
; CHECK-NEXT:    unreachable
; CHECK:       err86:
; CHECK-NEXT:    unreachable
;
top:
  br i1 undef, label %err86, label %pass9

pass9:                                            ; preds = %top
  %0 = load atomic {} addrspace(10)*, {} addrspace(10)* addrspace(11)* undef acquire, align 8
  unreachable

err86:                                            ; preds = %top
  unreachable
}
